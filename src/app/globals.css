@import 'tailwindcss';

@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --background: #ffffff;
  --foreground: #171717;
  --primary: #2563eb;
  --primary-foreground: #ffffff;
  --muted: #f3f4f6;
  --muted-foreground: #6b7280;
  --card: #ffffff;
  --card-foreground: #171717;
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
    --primary: #3b82f6;
    --primary-foreground: #ffffff;
    --muted: #1f2937;
    --muted-foreground: #9ca3af;
    --card: #1f2937;
    --card-foreground: #ededed;
  }
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }

  body {
    @apply bg-background text-foreground;
  }

  /* Enhanced focus styles */
  :focus-visible {
    @apply outline-none ring-2 ring-primary ring-offset-2 ring-offset-background;
  }
}

@layer components {
  .btn {
    @apply px-4 py-2 rounded-md transition-colors;
  }

  .btn-primary {
    @apply bg-primary text-primary-foreground hover:bg-primary/90;
  }

  .btn-secondary {
    @apply bg-muted text-muted-foreground hover:bg-muted/90;
  }

  .card {
    @apply p-4 border rounded-lg hover:border-primary transition-colors;
  }
}

@layer utilities {
  /* Custom animations */
  .animate-in {
    animation-duration: 500ms;
    animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    animation-fill-mode: forwards;
  }

  .slide-in-from-left {
    transform: translateX(-100%);
    animation: slide-in-left 0.5s cubic-bezier(0.4, 0, 0.2, 1) forwards;
  }

  .slide-in-from-right {
    transform: translateX(100%);
    animation: slide-in-right 0.5s cubic-bezier(0.4, 0, 0.2, 1) forwards;
  }

  .fade-in {
    opacity: 0;
    animation: fade-in 0.5s cubic-bezier(0.4, 0, 0.2, 1) forwards;
  }

  @keyframes slide-in-left {
    to {
      transform: translateX(0);
    }
  }

  @keyframes slide-in-right {
    to {
      transform: translateX(0);
    }
  }

  @keyframes fade-in {
    to {
      opacity: 1;
    }
  }

  /* Animated background gradients */
  .bg-gradient-animate {
    background-size: 200% 200%;
    animation: gradient 15s ease infinite;
  }

  @keyframes gradient {
    0% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
    100% {
      background-position: 0% 50%;
    }
  }
}
